#!/usr/bin/env bash
#
# Usage: `[SET_ENVVAR=...] 0.launch --docker [docker command]` or
#        `[SET_ENVVAR=...] && source 0.launch [docker command]`

# Function to display help message
show_help() {
    echo "Usage: [SET_ENVVAR1=...] && [SET_ENVVAR2=...] && source bin/$(basename "${BASH_SOURCE[0]}") [options]"
    echo
    echo "Useful environment variables:"
    echo "============================="
    echo "  SET_CORRDAT     Correlation releases to use for SRC data, higher precedence comes first (colon-separated list)"
    echo "  SET_WRKDIR      Working directory for pipeline process (default: PWD)"
    echo "  SET_TOPDIR      Top level dir for all stages (default: WRKDIR/..)"
    echo "  SET_DATADIR     Input/output data location for HOPS (default: WRKDIR/data)"
    echo "  SET_METADIR     Location of preset control files, META tables, ZBL flux estimates for netcal, etc"
    echo "  SET_SRCDIR      Single input data location for correlator source data"
    echo "  SET_SHRDIR      Location of shared resources (summary notebooks, etc)"
    echo "  SET_OBSYEAR     Campaign year"
    echo "  SET_MIXEDPOL    Enable mixed polarization calibration"
    echo "  SET_HAXP        Use HAXP data for ALMA (i.e. assume linearpol ALMA data present in -haxp directories)"
    echo
    echo "If these are not set and no command-line options are given, then reasonable defaults are used (not always guaranteed to work!)."
    echo
    echo "Command-line options:"
    echo "====================="
    echo "  -y <yyyy>       Campaign year"
    echo "  -m              Enable mixed polarization calibration"
    echo "  -x              Use HAXP data for ALMA (i.e. assume linearpol ALMA data present in -haxp directories)"
    echo "  -p <pattern>    Set the directory pattern for matching (regex); this is the parent directory of the <expt-no>/<scan> directories"
    echo "  -d <depth>      Set the directory depth for searching (integer); this is the distance between <CORRDAT> and <scan> directories"
    echo "  -S <dir>        Set the base data source directory (i.e. single input data location) "
    echo "  -C <colon-separated-list-of-dirs>    Set the correlation releases/tags to use in order of precedence"
    echo "  -M <dir>        Set the metadata directory (e.g. preset control files, META tables, ZBL flux estimates for netcal)"
    echo "  -h, --help      Display this help message and exit"
    echo
    echo "Note:"
    echo "  - The equivalent command-line options take precedence over the SET_* environment variables."
    echo "  - The SET_* environment variables take precedence over the default values."
    echo
    echo "Example:"
    echo "  SET_SRCDIR=/path/to/data/archive && SET_CORRDAT=\"Rev1-Cal:Rev1-Sci\" && SET_METADIR=/path/to/metadata && SET_OBSYEAR=2021 && source bin/0.launch"
}

if [ -f /.dockerenv ]; then
	echo "This script should:"
	echo "  1. sets up the host environment for HOPS, or"
	echo "  2. launches a HOPS docker container."
	echo "Avoid running it inside a container."
	exit 1
fi

# Default values can be adjusted by defining SET_* env variables prior to running launch
OBSYEAR=${SET_OBSYEAR:-"2021"}

# Overwrite OBSYEAR if passed from command line argument as it affects some default values
OPTIND=1 # start from the first argument (ignore existing shell state)
while getopts "y:" opt; do
        case $opt in
                y)
                        OBSYEAR=$OPTARG
                        ;;
        esac
done

# Default values can be adjusted by defining SET_* env variables prior to running launch
WRKDIR=${SET_WRKDIR:-"$PWD"}                   # working directory for current pipeline stage
TOPDIR=${SET_TOPDIR:-"$WRKDIR/.."}             # top level dir for all stages
DATADIR=${SET_DATADIR:-"$WRKDIR/data"}         # location of data directory (nominally within the working directory)
SRCDIR=${SET_SRCDIR:-"/data/2018-april/corr"}  # root location for all correlator source data
CORRDAT=${SET_CORRDAT:-"Rev4-Cal:Rev4-Sci"}    # subdirectories of SRCDIR to search, higher precedence comes first

# Default values can be adjusted by defining SET_* env variables prior to running launch
DEFAULT_METADIR="$TOPDIR/../meta/eht$OBSYEAR/230GHz"
METADIR=${SET_METADIR:-$DEFAULT_METADIR}       # location of preset control files, META tables
DEFAULT_SHRDIR="$TOPDIR/../plots/notebooks"
SHRDIR=${SET_SHRDIR:-$DEFAULT_SHRDIR}          # location of shared resources (summary notebooks, etc)

# Default values can be adjusted by defining SET_* env variables prior to running launch
MIXEDPOL=${SET_MIXEDPOL:-"false"}              # passed to pipeline scripts to control behavior
HAXP=${SET_HAXP:-"false"}                      # flag to mix-in haxp products into source data

# special handling for 2017, only two bands exist ("b3" => "lo" and "b4" => "hi")
if [[ $OBSYEAR = "2017" ]]; then
	BAND=${SET_BAND:-$(echo $WRKDIR | sed 's|.*/hops-\(..\)/.*$|\1|')} # band to process
	if [[ $BAND = "b3" ]]; then
		BAND="lo"
	elif [[ $BAND = "b4" ]]; then
		BAND="hi"
	fi
else
	BAND=${SET_BAND:-$(echo $WRKDIR | sed 's|.*/hops-\(..\)/.*$|\1|')} # band to process
fi

# Parse remaining command-line arguments, overwrite any existing settings
OPTIND=1 # start from the first argument (ignore existing shell state)
while getopts "y:d:S:C:M:mxh" opt; do
        case $opt in
                y)
                        OBSYEAR=$OPTARG # already handled above
                        ;;
                m)
                        MIXEDPOL=true
                        ;;
                x)
                        HAXP=true
                        ;;
                S)
                        SRCDIR=$OPTARG
                        ;;
                C)
                        CORRDAT=$OPTARG
                        ;;
                M)
                        METADIR=$OPTARG
                        ;;
                h|help)
                        show_help
                        return 0
                        ;;
                \?)
                        echo "Invalid option: -$OPTARG" >&2
                        show_help
                        return 1
                        ;;
                :)
                        echo "Option -$OPTARG requires an argument." >&2
                        show_help
                        return 1
                        ;;
        esac
done

# Perform some basic checks
if [ ! -d "$METADIR" ]; then
        echo "From $(basename "${BASH_SOURCE[0]}") ERROR:: METADIR=$(METADIR) does not exist! Exiting..."
        exit 1
fi
if [ ! -d "$SRCDIR" ]; then
        echo "From $(basename "${BASH_SOURCE[0]}") ERROR:: SRCDIR=$(SRCDIR) does not exist! Exiting..."
        exit 1
fi
if [ ! -d "$SHRDIR" ]; then
        echo "From $(basename "${BASH_SOURCE[0]}") WARNING:: SHRDIR=$(SHRDIR) does not exist! Continuing without generating summary notebooks..."
fi

# if MIXEDPOL=false and HAXP=true, then set MIXEDPOL=true and throw a warning
if [[ $MIXEDPOL = "false" && $HAXP = "true" ]]; then
        MIXEDPOL=true
        echo "MIXEDPOL set to true because HAXP is set to true."
fi

# Parse arguments
USE_DOCKER=${USE_DOCKER:-false}
if [ x"$1" == x"--docker" ]; then
	USE_DOCKER=true
	shift
fi

# Run docker or setup environment
# When running docker, we link the DIR paths to absolute paths, and set corresponding ENV variables in docker with -v
if [ x"$USE_DOCKER" == x"true" ]; then
	echo "0. Launching a HOPS docker container"

        echo "  Corr release(s), CORRDAT:   $CORRDAT"
        echo "  Data source dir, SRCDIR: $SRCDIR"
        echo "  Work dir, WRKDIR:   $WRKDIR"
        echo "  Top level work dir, TOPDIR:   $TOPDIR"
        echo "  HOPS data output, DATADIR:   $DATADIR"
        echo "  Dir to share resources b/w stages, SHRDIR:       $SHRDIR"
        echo "  Meta, METADIR:        $METADIR"
        echo "  Band, BAND:        $BAND"
        echo "  Campaign year, OBSYEAR:        $OBSYEAR"
        echo "  Mixed polarization calibration, MIXEDPOL:        $MIXEDPOL"
        echo "  Use HAXP data for ALMA, HAXP:        $HAXP"
        echo "  Command:     $@"

	if [ $# == 0 ]; then # no command line argument
		PORTFORWARD='-p 8888:8888'
	fi

	docker run --rm -it                            \
		-v "$WRKDIR:/root"                     \
		-v "$TOPDIR:/top"                      \
		-v "$SRCDIR:/data"                     \
		-v "$SHRDIR:/usr/local/pipeline/share" \
		-v "$METADIR:/meta"                    \
		-e "CORRDAT=$CORRDAT"                  \
		-e "WRKDIR=/root"                      \
		-e "TOPDIR=/top"                       \
		-e "DATADIR=/root${DATADIR##$WRKDIR}"  \
		-e "SRCDIR=/data"                      \
		-e "SHRDIR=/usr/local/pipeline/share"  \
		-e "METADIR=/meta"                     \
		-e "BAND=$BAND"                        \
		-e "OBSYEAR=$OBSYEAR"                  \
		-e "MIXEDPOL=$MIXEDPOL"                \
                -e "HAXP=$HAXP"                        \
		$PORTFORWARD                           \
		eventhorizontelescope/eat-notebook     \
		"$@"
else
	echo "0. Setting up an interactive HOPS environment"

        echo "  Corr release(s), CORRDAT:   $CORRDAT"
        echo "  Data source dir, SRCDIR: $SRCDIR"
        echo "  Work dir, WRKDIR:   $WRKDIR"
        echo "  Top level work dir, TOPDIR:   $TOPDIR"
        echo "  HOPS data output, DATADIR:   $DATADIR"
        echo "  Dir to share resources b/w stages, SHRDIR:       $SHRDIR"
        echo "  Meta, METADIR:        $METADIR"
        echo "  Band, BAND:        $BAND"
        echo "  Campaign year, OBSYEAR:        $OBSYEAR"
        echo "  Mixed polarization calibration, MIXEDPOL:        $MIXEDPOL"
        echo "  Use HAXP data for ALMA, HAXP:        $HAXP"
        echo "  Command:     $@"

	# Add more HOPS setup scripts here if needed
	export DATADIR # HOPS will need DATADIR to be ENV variable
fi

# copy stage-specific control files from METADIR
N=$(basename $PWD | sed 's/^\([0-9]*\)\..*/\1/')
NDIR=$(echo ../$N.*)

CFSET1=${METADIR}"/cf/cf"${N}"_bx_*"
CFSET2=${METADIR}"/cf/cf"${N}"_"${BAND}"_*"

echo ${CFSET1} ${CFSET2} "-> $NDIR"
cp -n ${CFSET1} ${CFSET2} "$NDIR"

