#!/usr/bin/env bash

/usr/bin/env python - << EOF >log/average.log 2>log/average.err
import os
import sys
import glob
import ehtim as eh

print("3. Coherently averaging UVFITS files with a 10-second integration time...")

daylist = sorted([int(i) for i in glob.glob('[0-9]*')])
for day in daylist:
    for uvf in glob.glob(f'{day}/*.uvfits'):
        # Skip the uvfits files that have already been averaged
        if uvf.endswith('+avg.uvfits'):
            continue
        try:
            (base, ext) = os.path.splitext(uvf)
            obs = eh.obsdata.load_uvfits(uvf, polrep='circ')
            # use cuts in calibrate.py
            obs = obs.flag_sites(["SR"])
            for snrfield in ['llsnr', 'rrsnr']:
                try:
                    obs = obs.flag_anomalous(snrfield, robust_nsigma_cut=3.0)
                except Exception as e:
                    sys.stderr.write(f'Error flagging anomalous data in {uvf}.: {e}\nContinuing without flagging anomalous data.\n')
            obs = obs.avg_coherent(10.)
            obs.save_uvfits(f'{base}+avg{ext}')
        except Exception as e:
            sys.stderr.write(f'Error averaging {uvf}: {e}\n')
EOF
