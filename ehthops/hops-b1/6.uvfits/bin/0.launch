#!/usr/bin/env bash
#
# Usage: `[SET_ENVVAR=...] 0.launch --docker [docker command]` or
#        `[SET_ENVVAR=...] && source 0.launch [docker command]`

# Function to display help message
show_help() {
    echo "Usage: [SET_ENVVAR1=...] && [SET_ENVVAR2=...] && source bin/$(basename "${BASH_SOURCE[0]}") [options]"
    echo
    echo "Useful environment variables:"
    echo "============================="
    echo "  SET_WRKDIR      Working directory for pipeline process (default: PWD)"
    echo "  SET_TOPDIR      Top level dir for all stages (default: WRKDIR/..)"
    echo "  SET_METADIR     Location of preset control files, META tables, ZBL flux estimates for netcal, etc"
    echo "  SET_SRCDIR      Data source directory. Starting from this stage, this is the DATADIR from the previous stage"
    echo "  SET_EHTIMPATH   Path to eht-imaging source code"
    echo "  SET_CAMPAIGN    EAT-recognizable campaign name"
    echo
    echo "If these are not set and no command-line options are given, then reasonable defaults are used (not always guaranteed to work!)."
    echo
    echo "Command-line options:"
    echo "====================="
    echo "  -c <campaign-name>       Campaign name recognizable by EAT (\"EHT2017\", \"EHT2018\", \"EHT2021\")"
    echo "  -S <dir>        Set the data source directory. Starting from this stage, this is the DATADIR from the previous stage"
    echo "  -M <dir>        Set the metadata directory (e.g. preset control files, META tables, ZBL flux estimates for netcal)"
    echo "  -h, --help      Display this help message and exit"
    echo
    echo "Note:"
    echo "  - The equivalent command-line options take precedence over the SET_* environment variables."
    echo "  - The SET_* environment variables take precedence over the default values."
    echo
    echo "Example:"
    echo "  SET_EHTIMPATH=/path/to/eht-imaging && SET_SRCDIR=/path/to/data/archive && SET_METADIR=/path/to/metadata && SET_CAMPAIGN=\"EHT2017\" && source bin/0.launch"
}

if [ -f /.dockerenv ]; then
	echo "This script should:"
	echo "  1. sets up the host environment for HOPS, or"
	echo "  2. launches a HOPS docker container."
	echo "Avoid running it inside a container."
	exit 1
fi

# Default values can be adjusted by defining SET_* env variables prior to running launch
CAMPAIGN=${SET_CAMPAIGN:-"EHT2021"}

# Overwrite CAMPAIGN if passed from command line argument as it affects some default values
OPTIND=1 # start from the first argument (ignore existing shell state)
while getopts "c:" opt; do
        case $opt in
                c)
                        CAMPAIGN=$OPTARG
                        ;;
        esac
done

# Default values can be adjusted by defining SET_* env variables prior to running launch
WRKDIR=${SET_WRKDIR:-"$PWD"}                  # working directory for pipeline process
TOPDIR=${SET_TOPDIR:-"$WRKDIR/.."}            # top level dir for all stages
SRCDIR=${SET_SRCDIR:-"/data/2018-april/corr"} # single input data location for correlator source data

# Default values can be adjusted by defining SET_* env variables prior to running launch
DEFAULT_METADIR="$TOPDIR/../meta/eht${CAMPAIGN: -4}/230GHz"
METADIR=${SET_METADIR:-$DEFAULT_METADIR}        # location of preset control files, META tables, ZBL flux estimates for netcal, etc
EHTIMPATH=${SET_EHTIMPATH:-"/usr/local/src/ehtim/"} # path to ehtim source (usually in dev branch)

# Determine the band to process -- used by hops2uvfits.py in 3.import
# special handling for 2017, only two bands exist ("b3" => "lo" and "b4" => "hi")
if [[ $CAMPAIGN = "2017" ]]; then
	BAND=${SET_BAND:-$(echo $WRKDIR | sed 's|.*/hops-\(..\)/.*$|\1|')} # band to process
	if [[ $BAND = "b3" ]]; then
		BAND="lo"
	elif [[ $BAND = "b4" ]]; then
		BAND="hi"
	fi
else
	BAND=${SET_BAND:-$(echo $WRKDIR | sed 's|.*/hops-\(..\)/.*$|\1|')} # band to process
fi

# Parse command-line arguments. overwrite any existing settings
OPTIND=1 # start from the first argument (ignore existing shell state)
while getopts "c:S:M:h" opt; do
        case $opt in
                c)
                        CAMPAIGN=$OPTARG
                        ;;
                S)
                        SRCDIR=$OPTARG
                        ;;
                M)
                        METADIR=$OPTARG
                        ;;
                h|help)
                        show_help
                        return 0
                        ;;
                \?)
                        echo "Invalid option: -$OPTARG" >&2
                        show_help
                        return 1
                        ;;
                :)
                        echo "Option -$OPTARG requires an argument." >&2
                        show_help
                        return 1
            ;;
        esac
done

# Perform some basic checks
if [ ! -d "$METADIR" ]; then
        echo "From $(basename "${BASH_SOURCE[0]}") ERROR:: METADIR=$(METADIR) does not exist! Exiting..."
        exit 1
fi
if [ ! -d "$SRCDIR" ]; then
        echo "From $(basename "${BASH_SOURCE[0]}") ERROR:: SRCDIR=$(SRCDIR) does not exist! Exiting..."
        exit 1
fi

# Parse arguments
USE_DOCKER=${USE_DOCKER:-false}
if [ x"$1" == x"--docker" ]; then
	USE_DOCKER=true
	shift
fi

# Run docker or setup environment
# When running docker, we link the DIR paths to absolute paths, and set corresponding ENV variables in docker with -v
if [ x"$USE_DOCKER" == x"true" ]; then
	echo "0. Launching a HOPS docker container"

        echo "  Data source dir, SRCDIR: $SRCDIR"
        echo "  Work dir, WRKDIR:   $WRKDIR"
        echo "  Top level work dir, TOPDIR:   $TOPDIR"
        echo "  Meta, METADIR:        $METADIR"
        echo "  Path to eht-imaging, EHTIMPATH:        $EHTIMPATH"
        echo "  Band, BAND:        $BAND"
        echo "  EAT-recognizable campaign name, CAMPAIGN:        $CAMPAIGN"
        echo "  Command:     $@"

	if [ $# == 0 ]; then # no command line argument
		PORTFORWARD='-p 8888:8888'
	fi

	docker run --rm -it                            \
		-v "$WRKDIR:/root"                     \
		-v "$TOPDIR:/top"                      \
		-v "$SRCDIR:/data"                     \
		-v "$METADIR:/meta"                    \
                -e "WRKDIR=/root"                      \
		-e "TOPDIR=/top"                       \
		-e "SRCDIR=/data"                      \
		-e "METADIR=/meta"                     \
                -e "EHTIMPATH=$EHTIMPATH"    \
		-e "BAND=$BAND"                        \
		-e "CAMPAIGN=$CAMPAIGN"                  \
		$PORTFORWARD                           \
		eventhorizontelescope/eat-notebook     \
		"$@"
else
	echo "0. Setting up an interactive HOPS environment"

        echo "  Data source dir, SRCDIR: $SRCDIR"
        echo "  Work dir, WRKDIR:   $WRKDIR"
        echo "  Top level work dir, TOPDIR:   $TOPDIR"
        echo "  Meta, METADIR:        $METADIR"
        echo "  Path to eht-imaging, EHTIMPATH:        $EHTIMPATH"
        echo "  Band, BAND:        $BAND"
        echo "  EAT-recognizable campaign name, CAMPAIGN:        $CAMPAIGN"
        echo "  Command:     $@"
fi
